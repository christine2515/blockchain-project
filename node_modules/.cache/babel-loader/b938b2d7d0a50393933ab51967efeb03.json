{"ast":null,"code":"var _jsxFileName = \"/Users/christinetu/Projects/fictune/src/Pages/Login.jsx\",\n    _s = $RefreshSig$();\n\n// import GoogleLogin from 'react-google-login';\n// import { useState } from 'react';\n// const Login = () => {\n//     const [loginData, setLoginData] = useState(\n//         localStorage.getItem('loginData') ? JSON.parse(localStorage.getItem('loginData')) : null\n//     );\n//     const handleFailure = (result) => {\n//         alert(result);\n//     };\n//     const handleLogin = async (googleData) => {\n//         const res = await fetch('/api/google-login', {\n//             method: 'POST',\n//             body: JSON.stringify({\n//                 token: googleData.tokenID,\n//             }),\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//         });\n//         const data = await res.json();\n//         setLoginData(data);\n//         localStorage.setItem('loginData', JSON.stringify(data));\n//     };\n//     const handleLogout = () => {\n//         localStorage.removeItem('loginData');\n//         setLoginData(null);\n//     }\n//     return (\n//         <div>\n//             <h1 className=\"loginTitle\">Choose a Login Method</h1>\n//             <div className=\"wrapper\">\n//                 {\n//                     loginData ? (\n//                         <div>\n//                             <h3>You logged in as {loginData.email}</h3>\n//                             <button onClick={handleLogout}>Logout</button>\n//                         </div>\n//                     ) : (\n//                     <GoogleLogin\n//                         clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n//                         buttonText=\"Log in with Google\"\n//                         onSuccess={handleLogin}\n//                         onFailure={handleFailure}\n//                         cookiePolicy={'single_host_origin'}\n//                     >\n//                     </GoogleLogin>\n//                     )\n//                 }\n//             </div>\n//         </div>\n//     )\n// }\n// export default Login\nimport GoogleLogin from 'react-google-login';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loginData, setLoginData] = useState(localStorage.getItem('loginData') ? JSON.parse(localStorage.getItem('loginData')) : null);\n\n  const handleFailure = result => {\n    alert(result);\n  };\n\n  const handleLogin = async googleData => {\n    const res = await fetch('/api/google-login', {\n      method: 'POST',\n      body: JSON.stringify({\n        token: googleData.tokenId\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    setLoginData(data);\n    localStorage.setItem('loginData', JSON.stringify(data));\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('loginData');\n    setLoginData(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React Google Login App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loginData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"You logged in as \", loginData.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          buttonText: \"Log in with Google\",\n          onSuccess: handleLogin,\n          onFailure: handleFailure,\n          cookiePolicy: 'single_host_origin'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"G/vfstPNFtFt3UtpHZ4X+jyJaJo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/christinetu/Projects/fictune/src/Pages/Login.jsx"],"names":["GoogleLogin","useState","App","loginData","setLoginData","localStorage","getItem","JSON","parse","handleFailure","result","alert","handleLogin","googleData","res","fetch","method","body","stringify","token","tokenId","headers","data","json","setItem","handleLogout","removeItem","email","process","env","REACT_APP_GOOGLE_CLIENT_ID"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CACxCI,YAAY,CAACC,OAAb,CAAqB,WAArB,IACIC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADJ,GAEI,IAHoC,CAA1C;;AAMA,QAAMG,aAAa,GAAIC,MAAD,IAAY;AAChCC,IAAAA,KAAK,CAACD,MAAD,CAAL;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAOC,UAAP,IAAsB;AACxC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mBAAD,EAAsB;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,IAAI,EAAEV,IAAI,CAACW,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAEN,UAAU,CAACO;AADC,OAAf,CAFqC;AAK3CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AALkC,KAAtB,CAAvB;AAUA,UAAMC,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAJ,EAAnB;AACAnB,IAAAA,YAAY,CAACkB,IAAD,CAAZ;AACAjB,IAAAA,YAAY,CAACmB,OAAb,CAAqB,WAArB,EAAkCjB,IAAI,CAACW,SAAL,CAAeI,IAAf,CAAlC;AACD,GAdD;;AAeA,QAAMG,YAAY,GAAG,MAAM;AACzBpB,IAAAA,YAAY,CAACqB,UAAb,CAAwB,WAAxB;AACAtB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGD,SAAS,gBACR;AAAA,kCACE;AAAA,4CAAsBA,SAAS,CAACwB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAEF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADQ,gBAMR,QAAC,WAAD;AACE,UAAA,QAAQ,EAAEG,OAAO,CAACC,GAAR,CAAYC,0BADxB;AAEE,UAAA,UAAU,EAAC,oBAFb;AAGE,UAAA,SAAS,EAAElB,WAHb;AAIE,UAAA,SAAS,EAAEH,aAJb;AAKE,UAAA,YAAY,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAtDQP,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["// import GoogleLogin from 'react-google-login';\n// import { useState } from 'react';\n\n// const Login = () => {\n//     const [loginData, setLoginData] = useState(\n//         localStorage.getItem('loginData') ? JSON.parse(localStorage.getItem('loginData')) : null\n//     );\n\n//     const handleFailure = (result) => {\n//         alert(result);\n//     };\n//     const handleLogin = async (googleData) => {\n//         const res = await fetch('/api/google-login', {\n//             method: 'POST',\n//             body: JSON.stringify({\n//                 token: googleData.tokenID,\n//             }),\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//         });\n\n//         const data = await res.json();\n//         setLoginData(data);\n//         localStorage.setItem('loginData', JSON.stringify(data));\n//     };\n//     const handleLogout = () => {\n//         localStorage.removeItem('loginData');\n//         setLoginData(null);\n//     }\n//     return (\n//         <div>\n//             <h1 className=\"loginTitle\">Choose a Login Method</h1>\n//             <div className=\"wrapper\">\n//                 {\n//                     loginData ? (\n//                         <div>\n//                             <h3>You logged in as {loginData.email}</h3>\n//                             <button onClick={handleLogout}>Logout</button>\n//                         </div>\n//                     ) : (\n//                     <GoogleLogin\n//                         clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n//                         buttonText=\"Log in with Google\"\n//                         onSuccess={handleLogin}\n//                         onFailure={handleFailure}\n//                         cookiePolicy={'single_host_origin'}\n//                     >\n//                     </GoogleLogin>\n//                     )\n//                 }\n \n\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default Login\n\nimport GoogleLogin from 'react-google-login';\nimport { useState } from 'react';\n\nfunction App() {\n  const [loginData, setLoginData] = useState(\n    localStorage.getItem('loginData')\n      ? JSON.parse(localStorage.getItem('loginData'))\n      : null\n  );\n\n  const handleFailure = (result) => {\n    alert(result);\n  };\n\n  const handleLogin = async (googleData) => {\n    const res = await fetch('/api/google-login', {\n      method: 'POST',\n      body: JSON.stringify({\n        token: googleData.tokenId,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const data = await res.json();\n    setLoginData(data);\n    localStorage.setItem('loginData', JSON.stringify(data));\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('loginData');\n    setLoginData(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>React Google Login App</h1>\n        <div>\n          {loginData ? (\n            <div>\n              <h3>You logged in as {loginData.email}</h3>\n              <button onClick={handleLogout}>Logout</button>\n            </div>\n          ) : (\n            <GoogleLogin\n              clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n              buttonText=\"Log in with Google\"\n              onSuccess={handleLogin}\n              onFailure={handleFailure}\n              cookiePolicy={'single_host_origin'}\n            ></GoogleLogin>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}