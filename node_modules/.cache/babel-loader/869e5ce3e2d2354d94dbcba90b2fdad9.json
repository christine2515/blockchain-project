{"ast":null,"code":"var _jsxFileName = \"/Users/christinetu/Projects/fictune/src/Pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport GoogleLogin from 'react-google-login';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [loginData, setLoginData] = useState(localStorage.getItem('loginData') ? JSON.parse(localStorage.getItem('loginData')) : null);\n\n  const handleFailure = result => {\n    alert(result);\n  };\n\n  const handleLogin = async googleData => {\n    const res = await fetch('/api/google-login', {\n      method: 'POST',\n      body: JSON.stringify({\n        token: googleData.tokenID\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    setLoginData(data);\n    localStorage.setItem('loginData', JSON.stringify(data));\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('loginData');\n    setLoginData(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loginTitle\",\n      children: \"Choose a Login Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: loginData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"You logged in as \", loginData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n        buttonText: \"Log in with Google\",\n        onSuccess: handleLogin,\n        onFailure: handleFailure,\n        cookiePolicy: 'single_host_origin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"2uyT/xN+Ak1xXvdBtrlkDmS5mdM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/christinetu/Projects/fictune/src/Pages/Login.jsx"],"names":["GoogleLogin","useState","Login","loginData","setLoginData","localStorage","getItem","JSON","parse","handleFailure","result","alert","handleLogin","googleData","res","fetch","method","body","stringify","token","tokenID","headers","data","json","setItem","handleLogout","removeItem","email","process","env","REACT_APP_GOOGLE_CLIENT_ID"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CACtCI,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,IAD9C,CAA1C;;AAIA,QAAMG,aAAa,GAAIC,MAAD,IAAY;AAC9BC,IAAAA,KAAK,CAACD,MAAD,CAAL;AACH,GAFD;;AAGA,QAAME,WAAW,GAAG,MAAOC,UAAP,IAAsB;AACtC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mBAAD,EAAsB;AACzCC,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,IAAI,EAAEV,IAAI,CAACW,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAEN,UAAU,CAACO;AADD,OAAf,CAFmC;AAKzCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AALgC,KAAtB,CAAvB;AAUA,UAAMC,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAJ,EAAnB;AACAnB,IAAAA,YAAY,CAACkB,IAAD,CAAZ;AACAjB,IAAAA,YAAY,CAACmB,OAAb,CAAqB,WAArB,EAAkCjB,IAAI,CAACW,SAAL,CAAeI,IAAf,CAAlC;AACH,GAdD;;AAeA,QAAMG,YAAY,GAAG,MAAM;AACvBpB,IAAAA,YAAY,CAACqB,UAAb,CAAwB,WAAxB;AACAtB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAHD;;AAIA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAEQD,SAAS,gBACL;AAAA,gCACI;AAAA,0CAAsBA,SAAS,CAACwB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAEF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,gBAMT,QAAC,WAAD;AACI,QAAA,QAAQ,EAAEG,OAAO,CAACC,GAAR,CAAYC,0BAD1B;AAEI,QAAA,UAAU,EAAC,oBAFf;AAGI,QAAA,SAAS,EAAElB,WAHf;AAII,QAAA,SAAS,EAAEH,aAJf;AAKI,QAAA,YAAY,EAAE;AALlB;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CArDD;;GAAMP,K;;KAAAA,K;AAuDN,eAAeA,KAAf","sourcesContent":["import GoogleLogin from 'react-google-login';\nimport { useState } from 'react';\n\nconst Login = () => {\n    const [loginData, setLoginData] = useState(\n        localStorage.getItem('loginData') ? JSON.parse(localStorage.getItem('loginData')) : null\n    );\n\n    const handleFailure = (result) => {\n        alert(result);\n    };\n    const handleLogin = async (googleData) => {\n        const res = await fetch('/api/google-login', {\n            method: 'POST',\n            body: JSON.stringify({\n                token: googleData.tokenID,\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n\n        const data = await res.json();\n        setLoginData(data);\n        localStorage.setItem('loginData', JSON.stringify(data));\n    };\n    const handleLogout = () => {\n        localStorage.removeItem('loginData');\n        setLoginData(null);\n    }\n    return (\n        <div>\n            <h1 className=\"loginTitle\">Choose a Login Method</h1>\n            <div className=\"wrapper\">\n                {\n                    loginData ? (\n                        <div>\n                            <h3>You logged in as {loginData.email}</h3>\n                            <button onClick={handleLogout}>Logout</button>\n                        </div>\n                    ) : (\n                    <GoogleLogin\n                        clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                        buttonText=\"Log in with Google\"\n                        onSuccess={handleLogin}\n                        onFailure={handleFailure}\n                        cookiePolicy={'single_host_origin'}\n                    >\n                    </GoogleLogin>\n                    )\n                }\n \n\n            </div>\n        </div>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}