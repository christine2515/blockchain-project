{"ast":null,"code":"var _jsxFileName = \"/Users/ericaliu/Desktop/blockchain-project/src/Pages/Login/Login.js\",\n    _s = $RefreshSig$();\n\n/*\n\n// import { useState } from 'react';\nimport Google from \"../Login/img/google.png\"\nimport Facebook from \"../Login/img/facebook.png\"\n// import Github from \"../Login/img/github.png\"\nimport Metamask from \"../Login/img/metamask.png\"\nimport \"./login.css\"\n\nconst Login = () => {\n\n  return (\n    <div className=\"login\">\n      <h1 className=\"loginTitle\">Choose a Login Method</h1>\n      <div className=\"wrapper\">\n        <div className=\"left\">\n          <div className=\"loginButton google\">\n            <img src={Google} alt=\"\" className=\"icon\" />\n            Google\n          </div>\n          <div className=\"loginButton facebook\">\n            <img src={Facebook} alt=\"\" className=\"icon\" />\n            Facebook\n          </div>\n          <div className=\"loginButton github\">\n            <img src={Metamask} alt=\"\" className=\"icon\" />\n            Metamask\n          </div>\n        </div>\n        <div className=\"center\">\n          <div className=\"line\" />\n          <div className=\"or\">OR</div>\n        </div>\n        <div className=\"right\">\n          <input type=\"text\" placeholder=\"Username\" />\n          <input type=\"text\" placeholder=\"Password\" />\n          <button className=\"submit\">Login</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n*/\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function checkIfWalletIsConnected(onConnected) {\n  if (window.ethereum) {\n    const accounts = await window.ethereum.request({\n      method: \"eth_accounts\"\n    });\n\n    if (accounts.length > 0) {\n      const account = accounts[0];\n      onConnected(account);\n      return;\n    }\n  }\n}\n\nasync function connect(onConnected) {\n  if (!window.ethereum) {\n    alert(\"Get MetaMask!\");\n    return;\n  }\n\n  const accounts = await window.ethereum.request({\n    method: \"eth_requestAccounts\"\n  });\n  onConnected(accounts[0]);\n}\n\nfunction Connect(_ref) {\n  let {\n    setUserAddress\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: styles.button,\n    onClick: () => connect(setUserAddress),\n    children: \"Connect to MetaMask\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Connect;\n\nfunction Address(_ref2) {\n  let {\n    userAddress\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: styles.address,\n    children: [userAddress.substring(0, 5), \"\\u2026\", userAddress.substring(userAddress.length - 4)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Address;\nexport default function\n  /*{onAddressChanged}*/\nMetaMaskAuth() {\n  _s();\n\n  const [userAddress, setUserAddress] = useState(\"\");\n  useEffect(() => {\n    checkIfWalletIsConnected(setUserAddress);\n  }, []);\n  /*useEffect(() => {\n    onAddressChanged(userAddress);\n  }, [userAddress]);\n  */\n\n  return userAddress ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Connected with \", /*#__PURE__*/_jsxDEV(Address, {\n      userAddress: userAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Connect, {\n    setUserAddress: setUserAddress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 6\n  }, this);\n}\n\n_s(MetaMaskAuth, \"0jWvZYOFdGjMk1C5cOeoDZF5Tlc=\");\n\n_c3 = MetaMaskAuth;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Connect\");\n$RefreshReg$(_c2, \"Address\");\n$RefreshReg$(_c3, \"MetaMaskAuth\");","map":{"version":3,"sources":["/Users/ericaliu/Desktop/blockchain-project/src/Pages/Login/Login.js"],"names":["React","useEffect","useState","styles","checkIfWalletIsConnected","onConnected","window","ethereum","accounts","request","method","length","account","connect","alert","Connect","setUserAddress","button","Address","userAddress","address","substring","MetaMaskAuth"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;AAGA,eAAeC,wBAAf,CAAwCC,WAAxC,EAAqD;AACnD,MAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,UAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAC7CC,MAAAA,MAAM,EAAE;AADqC,KAAxB,CAAvB;;AAIA,QAAIF,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACvB,YAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACAH,MAAAA,WAAW,CAACO,OAAD,CAAX;AACA;AACD;AACF;AACF;;AAED,eAAeC,OAAf,CAAuBR,WAAvB,EAAoC;AAClC,MAAI,CAACC,MAAM,CAACC,QAAZ,EAAsB;AACpBO,IAAAA,KAAK,CAAC,eAAD,CAAL;AACA;AACD;;AAED,QAAMN,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;AAC7CC,IAAAA,MAAM,EAAE;AADqC,GAAxB,CAAvB;AAIAL,EAAAA,WAAW,CAACG,QAAQ,CAAC,CAAD,CAAT,CAAX;AACD;;AAID,SAASO,OAAT,OAAqC;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AACnC,sBACE;AAAQ,IAAA,SAAS,EAAEb,MAAM,CAACc,MAA1B;AAAkC,IAAA,OAAO,EAAE,MAAMJ,OAAO,CAACG,cAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQD,O;;AAST,SAASG,OAAT,QAAkC;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAChC,sBACE;AAAM,IAAA,SAAS,EAAEhB,MAAM,CAACiB,OAAxB;AAAA,eAAkCD,WAAW,CAACE,SAAZ,CAAsB,CAAtB,EAAyB,CAAzB,CAAlC,YAAgEF,WAAW,CAACE,SAAZ,CAAsBF,WAAW,CAACR,MAAZ,GAAqB,CAA3C,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;MAJQO,O;AAOT,eAAe;AAAuB;AAAdI,YAAT,GAAgD;AAAA;;AAC7D,QAAM,CAACH,WAAD,EAAcH,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,wBAAwB,CAACY,cAAD,CAAxB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA;AACF;AACA;AACA;;AAEE,SAAOG,WAAW,gBAChB;AAAA,+CACiB,QAAC,OAAD;AAAS,MAAA,WAAW,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YADjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB,gBAKf,QAAC,OAAD;AAAS,IAAA,cAAc,EAAEH;AAAzB;AAAA;AAAA;AAAA;AAAA,UALH;AAOD;;GAnBuBM,Y;;MAAAA,Y","sourcesContent":["/*\n\n// import { useState } from 'react';\nimport Google from \"../Login/img/google.png\"\nimport Facebook from \"../Login/img/facebook.png\"\n// import Github from \"../Login/img/github.png\"\nimport Metamask from \"../Login/img/metamask.png\"\nimport \"./login.css\"\n\nconst Login = () => {\n\n  return (\n    <div className=\"login\">\n      <h1 className=\"loginTitle\">Choose a Login Method</h1>\n      <div className=\"wrapper\">\n        <div className=\"left\">\n          <div className=\"loginButton google\">\n            <img src={Google} alt=\"\" className=\"icon\" />\n            Google\n          </div>\n          <div className=\"loginButton facebook\">\n            <img src={Facebook} alt=\"\" className=\"icon\" />\n            Facebook\n          </div>\n          <div className=\"loginButton github\">\n            <img src={Metamask} alt=\"\" className=\"icon\" />\n            Metamask\n          </div>\n        </div>\n        <div className=\"center\">\n          <div className=\"line\" />\n          <div className=\"or\">OR</div>\n        </div>\n        <div className=\"right\">\n          <input type=\"text\" placeholder=\"Username\" />\n          <input type=\"text\" placeholder=\"Password\" />\n          <button className=\"submit\">Login</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n*/\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./login.css\";\n\n\nasync function checkIfWalletIsConnected(onConnected) {\n  if (window.ethereum) {\n    const accounts = await window.ethereum.request({\n      method: \"eth_accounts\",\n    });\n\n    if (accounts.length > 0) {\n      const account = accounts[0];\n      onConnected(account);\n      return;\n    }\n  }\n}\n\nasync function connect(onConnected) {\n  if (!window.ethereum) {\n    alert(\"Get MetaMask!\");\n    return;\n  }\n\n  const accounts = await window.ethereum.request({\n    method: \"eth_requestAccounts\",\n  });\n\n  onConnected(accounts[0]);\n}\n\n\n\nfunction Connect({ setUserAddress }) {\n  return (\n    <button className={styles.button} onClick={() => connect(setUserAddress)}>\n      Connect to MetaMask\n    </button>\n  );\n}\n\n\nfunction Address({ userAddress }) {\n  return (\n    <span className={styles.address}>{userAddress.substring(0, 5)}â€¦{userAddress.substring(userAddress.length - 4)}</span>\n  );\n}\n\n\nexport default function MetaMaskAuth( /*{onAddressChanged}*/ ) {\n  const [userAddress, setUserAddress] = useState(\"\");\n\n  useEffect(() => {\n    checkIfWalletIsConnected(setUserAddress);\n  }, []);\n\n  /*useEffect(() => {\n    onAddressChanged(userAddress);\n  }, [userAddress]);\n  */\n\n  return userAddress ? (\n    <div>\n      Connected with <Address userAddress={userAddress} />\n    </div>\n  ) : (\n     <Connect setUserAddress={setUserAddress}/>\n  );\n}"]},"metadata":{},"sourceType":"module"}