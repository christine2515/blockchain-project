{"ast":null,"code":"var _jsxFileName = \"/Users/ericaliu/Desktop/blockchain-project/src/Pages/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\n/*\n\n// import { useState } from 'react';\nimport Google from \"../Login/img/google.png\"\nimport Facebook from \"../Login/img/facebook.png\"\n// import Github from \"../Login/img/github.png\"\nimport Metamask from \"../Login/img/metamask.png\"\nimport \"./login.css\"\n\nconst Login = () => {\n\n  return (\n    <div className=\"login\">\n      <h1 className=\"loginTitle\">Choose a Login Method</h1>\n      <div className=\"wrapper\">\n        <div className=\"left\">\n          <div className=\"loginButton google\">\n            <img src={Google} alt=\"\" className=\"icon\" />\n            Google\n          </div>\n          <div className=\"loginButton facebook\">\n            <img src={Facebook} alt=\"\" className=\"icon\" />\n            Facebook\n          </div>\n          <div className=\"loginButton github\">\n            <img src={Metamask} alt=\"\" className=\"icon\" />\n            Metamask\n          </div>\n        </div>\n        <div className=\"center\">\n          <div className=\"line\" />\n          <div className=\"or\">OR</div>\n        </div>\n        <div className=\"right\">\n          <input type=\"text\" placeholder=\"Username\" />\n          <input type=\"text\" placeholder=\"Password\" />\n          <button className=\"submit\">Login</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n*/\n// Importing modules\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport { Button, Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  // usetstate for storing and retrieving wallet details\n  const [data, setdata] = useState({\n    address: \"\",\n    Balance: null\n  }); // Button handler button for handling a\n  // request event for metamask\n\n  const btnhandler = () => {\n    // Asking if metamask is already present or not\n    if (window.ethereum) {\n      // res[0] for fetching a first wallet\n      window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(res => accountChangeHandler(res[0]));\n    } else {\n      alert(\"install metamask extension!!\");\n    }\n  }; // getbalance function for getting a balance in\n  // a right format with help of ethers\n\n\n  const getbalance = address => {\n    // Requesting balance method\n    window.ethereum.request({\n      method: \"eth_getBalance\",\n      params: [address, \"latest\"]\n    }).then(balance => {\n      // Setting balance\n      setdata({\n        Balance: ethers.utils.formatEther(balance)\n      });\n    });\n  }; // Function for getting handling all events\n\n\n  const accountChangeHandler = account => {\n    // Setting an address data\n    setdata({\n      address: account\n    }); // Setting a balance\n\n    getbalance(account);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), data.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Balance: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), data.Balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: btnhandler,\n          variant: \"primary\",\n          children: \"Connect to wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"cMx2ePmJTMO3bIE0EDMLHweh8i0=\");\n\n_c = Login;\nexport default Return;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/ericaliu/Desktop/blockchain-project/src/Pages/Login/Login.jsx"],"names":["React","useState","ethers","Button","Card","Login","data","setdata","address","Balance","btnhandler","window","ethereum","request","method","then","res","accountChangeHandler","alert","getbalance","params","balance","utils","formatEther","account","Return"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,OAAO,sCAAP;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEf;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAC/BO,IAAAA,OAAO,EAAE,EADsB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAAD,CAAhC,CAHe,CAQf;AACA;;AACA,QAAMC,UAAU,GAAG,MAAM;AAEvB;AACA,QAAIC,MAAM,CAACC,QAAX,EAAqB;AAEnB;AACAD,MAAAA,MAAM,CAACC,QAAP,CACGC,OADH,CACW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADX,EAEGC,IAFH,CAESC,GAAD,IAASC,oBAAoB,CAACD,GAAG,CAAC,CAAD,CAAJ,CAFrC;AAGD,KAND,MAMO;AACLE,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;AACF,GAZD,CAVe,CAwBf;AACA;;;AACA,QAAMC,UAAU,GAAIX,OAAD,IAAa;AAE9B;AACAG,IAAAA,MAAM,CAACC,QAAP,CACGC,OADH,CACW;AACPC,MAAAA,MAAM,EAAE,gBADD;AAEPM,MAAAA,MAAM,EAAE,CAACZ,OAAD,EAAU,QAAV;AAFD,KADX,EAKGO,IALH,CAKSM,OAAD,IAAa;AACjB;AACAd,MAAAA,OAAO,CAAC;AACNE,QAAAA,OAAO,EAAEP,MAAM,CAACoB,KAAP,CAAaC,WAAb,CAAyBF,OAAzB;AADH,OAAD,CAAP;AAGD,KAVH;AAWD,GAdD,CA1Be,CA0Cf;;;AACA,QAAMJ,oBAAoB,GAAIO,OAAD,IAAa;AACxC;AACAjB,IAAAA,OAAO,CAAC;AACNC,MAAAA,OAAO,EAAEgB;AADH,KAAD,CAAP,CAFwC,CAMxC;;AACAL,IAAAA,UAAU,CAACK,OAAD,CAAV;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BAIE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGlB,IAAI,CAACE,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGF,IAAI,CAACG,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEC,UAAjB;AAA6B,UAAA,OAAO,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA3EQL,K;;KAAAA,K;AA6ET,eAAeoB,MAAf","sourcesContent":["/*\n\n// import { useState } from 'react';\nimport Google from \"../Login/img/google.png\"\nimport Facebook from \"../Login/img/facebook.png\"\n// import Github from \"../Login/img/github.png\"\nimport Metamask from \"../Login/img/metamask.png\"\nimport \"./login.css\"\n\nconst Login = () => {\n\n  return (\n    <div className=\"login\">\n      <h1 className=\"loginTitle\">Choose a Login Method</h1>\n      <div className=\"wrapper\">\n        <div className=\"left\">\n          <div className=\"loginButton google\">\n            <img src={Google} alt=\"\" className=\"icon\" />\n            Google\n          </div>\n          <div className=\"loginButton facebook\">\n            <img src={Facebook} alt=\"\" className=\"icon\" />\n            Facebook\n          </div>\n          <div className=\"loginButton github\">\n            <img src={Metamask} alt=\"\" className=\"icon\" />\n            Metamask\n          </div>\n        </div>\n        <div className=\"center\">\n          <div className=\"line\" />\n          <div className=\"or\">OR</div>\n        </div>\n        <div className=\"right\">\n          <input type=\"text\" placeholder=\"Username\" />\n          <input type=\"text\" placeholder=\"Password\" />\n          <button className=\"submit\">Login</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n*/\n\n// Importing modules\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport { Button, Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n  \nfunction Login() {\n  \n  // usetstate for storing and retrieving wallet details\n  const [data, setdata] = useState({\n    address: \"\",\n    Balance: null,\n  });\n  \n  // Button handler button for handling a\n  // request event for metamask\n  const btnhandler = () => {\n  \n    // Asking if metamask is already present or not\n    if (window.ethereum) {\n  \n      // res[0] for fetching a first wallet\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((res) => accountChangeHandler(res[0]));\n    } else {\n      alert(\"install metamask extension!!\");\n    }\n  };\n  \n  // getbalance function for getting a balance in\n  // a right format with help of ethers\n  const getbalance = (address) => {\n  \n    // Requesting balance method\n    window.ethereum\n      .request({ \n        method: \"eth_getBalance\", \n        params: [address, \"latest\"] \n      })\n      .then((balance) => {\n        // Setting balance\n        setdata({\n          Balance: ethers.utils.formatEther(balance),\n        });\n      });\n  };\n  \n  // Function for getting handling all events\n  const accountChangeHandler = (account) => {\n    // Setting an address data\n    setdata({\n      address: account,\n    });\n  \n    // Setting a balance\n    getbalance(account);\n  };\n  \n  return (\n    <div className=\"Login\">\n      {/* Calling all values which we \n       have stored in usestate */}\n  \n      <Card className=\"text-center\">\n        <Card.Header>\n          <strong>Address: </strong>\n          {data.address}\n        </Card.Header>\n        <Card.Body>\n          <Card.Text>\n            <strong>Balance: </strong>\n            {data.Balance}\n          </Card.Text>\n          <Button onClick={btnhandler} variant=\"primary\">\n            Connect to wallet\n          </Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n  \nexport default Return;\n"]},"metadata":{},"sourceType":"module"}